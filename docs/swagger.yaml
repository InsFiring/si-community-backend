basePath: /v1
definitions:
  api.EmailResponse:
    properties:
      has_email:
        type: boolean
    type: object
  article.ArticleModifyDto:
    properties:
      contents:
        type: string
      ratings:
        type: integer
      title:
        type: string
    type: object
  article.ArticleRequestDto:
    properties:
      company:
        type: string
      contents:
        type: string
      nickname:
        type: string
      ratings:
        type: integer
      title:
        type: string
    type: object
  article.ArticleSearchDto:
    properties:
      company:
        type: string
      contents:
        type: string
      nickname:
        type: string
      ratings:
        type: integer
      title:
        type: string
    type: object
  article.Articles:
    properties:
      article_id:
        type: integer
      company:
        type: string
      contents:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      is_modified:
        type: string
      likes:
        type: integer
      nickname:
        type: string
      ratings:
        type: integer
      title:
        type: string
      unlikes:
        type: integer
      updatedAt:
        type: string
      view_counts:
        type: integer
    type: object
  article_reply.ArticleReplies:
    properties:
      article_id:
        type: integer
      contents:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      is_modified:
        type: string
      likes:
        type: integer
      nickname:
        type: string
      parent_reply_id:
        type: integer
      reply_id:
        type: integer
      unlikes:
        type: integer
      updatedAt:
        type: string
    type: object
  article_reply.ArticleReplyModifyDto:
    properties:
      contents:
        type: string
    type: object
  article_reply.ArticleReplyRequestDto:
    properties:
      article_id:
        type: integer
      contents:
        type: string
      nickname:
        type: string
      parent_reply_id:
        type: integer
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  user.UserModifyDto:
    properties:
      company:
        type: string
      email:
        type: string
      nickname:
        type: string
    type: object
  user.UserRequestDto:
    properties:
      current_password:
        type: string
      email:
        type: string
      new_password:
        type: string
    type: object
  user.UserResponseDto:
    properties:
      access_token:
        type: string
      company:
        type: string
      email:
        type: string
      nickname:
        type: string
      refresh_token:
        type: string
      register_number:
        type: integer
    type: object
  user.Users:
    properties:
      company:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      is_active:
        type: string
      is_admin:
        type: string
      loggedin:
        type: string
      nickname:
        type: string
      password:
        type: string
      register_number:
        type: integer
      updatedAt:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: SI Community API Swagger.
  title: SI Community API
  version: "1.0"
paths:
  /changeUserInfo:
    put:
      consumes:
      - application/json
      description: 회원 정보 수정
      parameters:
      - description: 회원 수정 관련 DTO 사용 - email은 필수 나머지는 옵션
        in: body
        name: UserModifyDto
        required: true
        schema:
          $ref: '#/definitions/user.UserModifyDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - users
  /v1/article:
    get:
      consumes:
      - application/json
      description: 게시글 검색 기능
      parameters:
      - description: page 번호
        in: query
        name: page
        required: true
        type: string
      - description: offset 숫자
        in: query
        name: offset
        required: true
        type: string
      - description: ratings, title, contents, nickname, company 중 1개 필드 검색 / 다중 검색은
          구현 안함
        in: body
        name: ArticleSearchDto
        required: true
        schema:
          $ref: '#/definitions/article.ArticleSearchDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - articles
    post:
      consumes:
      - application/json
      description: 게시글 추가
      parameters:
      - description: ratings, title, contents, nickname, company 필수
        in: body
        name: ArticleRequestDto
        required: true
        schema:
          $ref: '#/definitions/article.ArticleRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - articles
  /v1/article/{id}:
    delete:
      consumes:
      - application/json
      description: 게시글 삭제
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - articles
    get:
      consumes:
      - application/json
      description: 게시글 ID로 조회
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - articles
    put:
      consumes:
      - application/json
      description: 게시글 수정
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 수정 관련 DTO 사용
        in: body
        name: ArticleModifyDto
        required: true
        schema:
          $ref: '#/definitions/article.ArticleModifyDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - articles
  /v1/article/{id}/article_replies:
    get:
      consumes:
      - application/json
      description: 게시글 댓글 조회
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article_reply.ArticleReplies'
      tags:
      - article_reply
  /v1/article/{id}/article_replies/{reply_id}:
    delete:
      consumes:
      - application/json
      description: 게시글 댓글 삭제
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 댓글 ID
        in: path
        name: reply_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - article_reply
    put:
      consumes:
      - application/json
      description: 게시글 댓글 수정
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 댓글 ID
        in: path
        name: reply_id
        required: true
        type: integer
      - description: 수정 관련 DTO 사용
        in: body
        name: ArticleReplyModifyDto
        required: true
        schema:
          $ref: '#/definitions/article_reply.ArticleReplyModifyDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article_reply.ArticleReplies'
      tags:
      - article_reply
  /v1/article/{id}/article_replies/{reply_id}/cancel_like:
    get:
      consumes:
      - application/json
      description: 게시글 댓글 좋아요 취소
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 댓글 ID
        in: path
        name: reply_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article_reply.ArticleReplies'
      tags:
      - article_reply
  /v1/article/{id}/article_replies/{reply_id}/cancel_unlike:
    get:
      consumes:
      - application/json
      description: 게시글 댓글 싫어요 취소
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 댓글 ID
        in: path
        name: reply_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article_reply.ArticleReplies'
      tags:
      - article_reply
  /v1/article/{id}/article_replies/{reply_id}/like:
    get:
      consumes:
      - application/json
      description: 게시글 댓글 좋아요 추가
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 댓글 ID
        in: path
        name: reply_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article_reply.ArticleReplies'
      tags:
      - article_reply
  /v1/article/{id}/article_replies/{reply_id}/unlike:
    get:
      consumes:
      - application/json
      description: 게시글 댓글 싫어요 추가
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 댓글 ID
        in: path
        name: reply_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article_reply.ArticleReplies'
      tags:
      - article_reply
  /v1/article/{id}/cancel_like:
    get:
      consumes:
      - application/json
      description: 게시글 좋아요 취소
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - articles
  /v1/article/{id}/cancel_unlike:
    get:
      consumes:
      - application/json
      description: 게시글 싫어요 취소
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - articles
  /v1/article/{id}/like:
    get:
      consumes:
      - application/json
      description: 게시글 좋아요 수 추가
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - articles
  /v1/article/{id}/unlike:
    get:
      consumes:
      - application/json
      description: 게시글 싫어요 추가
      parameters:
      - description: 게시글 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - articles
  /v1/article_reply:
    post:
      consumes:
      - application/json
      description: 게시글 댓글 추가
      parameters:
      - description: article_id, nickname, contents 필수, parent_reply_id는 대댓글에 따라 선택
        in: body
        name: articleReplyRequestDto
        required: true
        schema:
          $ref: '#/definitions/article_reply.ArticleReplyRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - article_reply
  /v1/articles:
    get:
      consumes:
      - application/json
      description: 게시글 조회
      parameters:
      - description: page 번호
        in: query
        name: page
        required: true
        type: string
      - description: offset 숫자
        in: query
        name: offset
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Articles'
      tags:
      - articles
  /v1/users:
    post:
      consumes:
      - application/json
      description: 회원 가입
      parameters:
      - description: email, password, nickname, company만 있으면 됨 / is_admin 컬럼으로 회사
          관리자인지 일반유저인지 구분 가능
        in: body
        name: Users
        schema:
          $ref: '#/definitions/user.Users'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.Users'
      tags:
      - users
  /v1/users/changePassword:
    post:
      consumes:
      - application/json
      description: 비밀번호 변경
      parameters:
      - description: 비밀번호 변경 input
        in: body
        name: UserRequestDto
        required: true
        schema:
          $ref: '#/definitions/user.UserRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponseDto'
      tags:
      - users
  /v1/users/emails:
    post:
      consumes:
      - application/json
      description: 이메일 중복 체크
      parameters:
      - description: 이메일값만 있으면 됨
        in: body
        name: UserRequestDto
        required: true
        schema:
          $ref: '#/definitions/user.UserRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.EmailResponse'
      tags:
      - users
  /v1/users/signin:
    post:
      consumes:
      - application/json
      description: 로그인
      parameters:
      - description: 로그인 input / new_password는 없어도 됨.
        in: body
        name: UserRequestDto
        required: true
        schema:
          $ref: '#/definitions/user.UserRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponseDto'
      tags:
      - users
swagger: "2.0"
